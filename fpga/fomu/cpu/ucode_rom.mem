// 0x00000000
c262  // BOOT
// 001: PANIC!
002f  // FAIL
8001  // jump(001)
// 003: ^C
521f  // (CONST)
0003
// 005: '\b'
521f  // (CONST)
0008
// 007: '\t'
521f  // (CONST)
0009
// 009: '\n'
521f  // (CONST)
000a
// 00b: '\r'
521f  // (CONST)
000d
// 00d: BL
521f  // (CONST)
0020
// 00f: '0'
521f  // (CONST)
// 0x00000010
0030
// 011: '9'
521f  // (CONST)
0039
// 013: A-10
521f  // (CONST)
0037
// 015: 'A'
521f  // (CONST)
0041
// 017: 'F'
521f  // (CONST)
0046
// 019: 'Z'
521f  // (CONST)
005a
// 01b: 'a'
521f  // (CONST)
0061
// 01d: 'f'
521f  // (CONST)
0066
// 01f: 'z'
521f  // (CONST)
// 0x00000020
007a
// 021: DEL
521f  // (CONST)
007f
// 023: (JMP)
1280  // R>
// 024: @EXECUTE
030f  // @
// 025: EXECUTE
021f  // (LIT)
0fff
0744  // AND
2100  // >R
// 029: (EXIT)
5000  // NOP EXIT
// 02a: ?:
902c  // jump_ifzero(02c)
0400  // SWAP
// 02c: (DROP)
5100  // DROP EXIT
// 02d: (VAR)
1280  // R>
5000  // NOP EXIT
// 02f: (CONST)
1280  // R>
// 0x00000030
530f  // @ EXIT
// 031: NIP
0400  // SWAP
5100  // DROP EXIT
// 033: TUCK
0400  // SWAP
5240  // OVER EXIT
// 035: 2DUP
0240  // OVER
5240  // OVER EXIT
// 037: 2DROP
0100  // DROP
5100  // DROP EXIT
// 039: ABS
0200  // DUP
0324  // MSB&
903d  // jump_ifzero(03d)
53c2  // NEGATE EXIT
// 03d: BOOL
9040  // jump_ifzero(040)
02f6  // TRUE
8041  // jump(041)
// 0x00000040
02c0  // 0
5000  // NOP EXIT
// 042: =
0745  // XOR
// 043: 0=
// 043: NOT
9046  // jump_ifzero(046)
02c0  // 0
8047  // jump(047)
02f6  // TRUE
5000  // NOP EXIT
// 048: <>
c042  // =
5335  // INVERT EXIT
// 04a: 0>
03c2  // NEGATE
// 04b: 0<
0324  // MSB&
803d  // jump(03d)
// 04d: >
0400  // SWAP
// 04e: <
0742  // -
804b  // jump(04b)
// 0x00000050
// 050: >=
c04e  // <
5335  // INVERT EXIT
// 052: <=
c04d  // >
5335  // INVERT EXIT
// 054: MAX
c035  // 2DUP
c04e  // <
802a  // jump(02a)
// 057: MIN
c035  // 2DUP
c04d  // >
802a  // jump(02a)
// 05a: @1+
0200  // DUP
030f  // @
0311  // 1+
0400  // SWAP
598f  // ! EXIT
// 05f: @1-
0200  // DUP
// 0x00000060
030f  // @
0312  // 1-
0400  // SWAP
598f  // ! EXIT
// 064: INBOUNDS
0600  // -ROT
0240  // OVER
0400  // SWAP
0742  // -
0600  // -ROT
0742  // -
0746  // OR
0324  // MSB&
8043  // jump(043)
// 06d: ISDIGIT
c00f  // '0'
c011  // '9'
8064  // jump(064)
// 0x00000070
// 070: ISHEX
0200  // DUP
c015  // 'A'
c017  // 'F'
c064  // INBOUNDS
0240  // OVER
c01b  // 'a'
c01d  // 'f'
c064  // INBOUNDS
0746  // OR
0400  // SWAP
c06d  // ISDIGIT
5746  // OR EXIT
// 07c: ISUPPER
c015  // 'A'
c019  // 'Z'
8064  // jump(064)
// 07f: ISLOWER
c01b  // 'a'
// 0x00000080
c01f  // 'z'
8064  // jump(064)
// 082: TOUPPER
0200  // DUP
c07f  // ISLOWER
9087  // jump_ifzero(087)
c00d  // BL
0745  // XOR
5000  // NOP EXIT
// 088: TOLOWER
0200  // DUP
c07c  // ISUPPER
908d  // jump_ifzero(08d)
c00d  // BL
0745  // XOR
5000  // NOP EXIT
// 08e: TOHEX
021f  // (LIT)
000f
// 0x00000090
0744  // AND
0200  // DUP
021f  // (LIT)
000a
c04e  // <
9098  // jump_ifzero(098)
c00f  // '0'
8099  // jump(099)
c013  // A-10
5741  // + EXIT
// 09a: FROMHEX
c082  // TOUPPER
0200  // DUP
c015  // 'A'
c04e  // <
90a1  // jump_ifzero(0a1)
c00f  // '0'
// 0x000000a0
80a2  // jump(0a2)
c013  // A-10
5742  // - EXIT
// 0a3: TX?
// 0a3: EMIT?
021f  // (LIT)
0000  // NOP
533f  // IO@ EXIT
// 0a6: TX!
021f  // (LIT)
0001
59bf  // IO! EXIT
// 0a9: RX?
// 0a9: KEY?
021f  // (LIT)
0002
533f  // IO@ EXIT
// 0ac: RX@
021f  // (LIT)
0003
533f  // IO@ EXIT
// 0af: EMIT
c0a3  // TX?
// 0x000000b0
90af  // jump_ifzero(0af)
80a6  // jump(0a6)
// 0b2: KEY
c0a9  // RX?
90b2  // jump_ifzero(0b2)
80ac  // jump(0ac)
// 0b5: ECHO
c0af  // EMIT
0200  // DUP
c00b  // '\r'
c042  // =
90bc  // jump_ifzero(0bc)
c009  // '\n'
c0af  // EMIT
5000  // NOP EXIT
// 0bd: SPACE
c00d  // BL
80af  // jump(0af)
// 0bf: SPACES
2100  // >R
// 0x000000c0
80c2  // jump(0c2)
c0bd  // SPACE
b0c1  // jump_ifnz_dec(0c1)
5000  // NOP EXIT
// 0c4: CR
c00b  // '\r'
c0af  // EMIT
c009  // '\n'
80af  // jump(0af)
// 0c8: X#
c08e  // TOHEX
80af  // jump(0af)
// 0ca: X.
021f  // (LIT)
0004
2100  // >R
80d1  // jump(0d1)
0309  // 4ROL
0200  // DUP
// 0x000000d0
c0c8  // X#
b0ce  // jump_ifnz_dec(0ce)
5100  // DROP EXIT
// 0d3: '!'
521f  // (CONST)
0021
// 0d5: '.'
521f  // (CONST)
002e
// 0d7: '/'
521f  // (CONST)
002f  // FAIL
// 0d9: '<'
521f  // (CONST)
003c
// 0db: '>'
521f  // (CONST)
003e
// 0dd: '?'
521f  // (CONST)
003f
// 0df: '@'
521f  // (CONST)
// 0x000000e0
0040
// 0e1: '['
521f  // (CONST)
005b
// 0e3: ']'
521f  // (CONST)
005d
// 0e5: 'q'
521f  // (CONST)
0071
// 0e7: 'r'
521f  // (CONST)
0072
// 0e9: cmd
521f  // (CONST)
00eb
0000  // NOP
// 0ec: inp
521f  // (CONST)
00ee
0000  // NOP
// 0ef: tos
521f  // (CONST)
// 0x000000f0
00f1
0000  // NOP
// 0f2: nos
521f  // (CONST)
00f4
0000  // NOP
// 0f5: copy
521f  // (CONST)
00f7
0000  // NOP
// 0f8: here
521f  // (CONST)
00fa
0000  // NOP
// 0fb: push
c0ef  // tos
030f  // @
c0f2  // nos
098f  // !
c0ef  // tos
// 0x00000100
598f  // ! EXIT
// 101: pop
c0ef  // tos
030f  // @
c0f2  // nos
030f  // @
c0ef  // tos
598f  // ! EXIT
// 107: quad
0200  // DUP
0324  // MSB&
910e  // jump_ifzero(10e)
021f  // (LIT)
0fff
0744  // AND
811d  // jump(11d)
0308  // 2ROL
0200  // DUP
// 0x00000110
0314  // LSB&
9119  // jump_ifzero(119)
021f  // (LIT)
3ffc
0744  // AND
021f  // (LIT)
4000
0746  // OR
811d  // jump(11d)
021f  // (LIT)
7ffc
0744  // AND
0326  // MSB|
5000  // NOP EXIT
// 11e: fetch
0200  // DUP
021f  // (LIT)
// 0x00000120
c000  // call(000)
0744  // AND
914b  // jump_ifzero(14b)
0200  // DUP
021f  // (LIT)
0003
0744  // AND
0400  // SWAP
0200  // DUP
0324  // MSB&
912f  // jump_ifzero(12f)
030c  // 2ASR
021f  // (LIT)
1fff
8132  // jump(132)
030c  // 2ASR
// 0x00000130
021f  // (LIT)
0fff
0744  // AND
0240  // OVER
021f  // (LIT)
0001
c042  // =
913a  // jump_ifzero(13a)
035f  // QX@
8149  // jump(149)
0240  // OVER
021f  // (LIT)
0002
c042  // =
9141  // jump_ifzero(141)
036f  // QY@
// 0x00000140
8149  // jump(149)
0240  // OVER
021f  // (LIT)
0003
c042  // =
9148  // jump_ifzero(148)
037f  // QZ@
8149  // jump(149)
034f  // QT@
c031  // NIP
814c  // jump(14c)
030f  // @
5000  // NOP EXIT
// 14d: store
0200  // DUP
021f  // (LIT)
c000  // call(000)
// 0x00000150
0744  // AND
917e  // jump_ifzero(17e)
0200  // DUP
021f  // (LIT)
0003
0744  // AND
0400  // SWAP
0200  // DUP
0324  // MSB&
915e  // jump_ifzero(15e)
030c  // 2ASR
021f  // (LIT)
1fff
8161  // jump(161)
030c  // 2ASR
021f  // (LIT)
// 0x00000160
0fff
0744  // AND
0400  // SWAP
0200  // DUP
021f  // (LIT)
0001
c042  // =
916b  // jump_ifzero(16b)
0100  // DROP
09df  // QX!
817d  // jump(17d)
0200  // DUP
021f  // (LIT)
0002
c042  // =
9173  // jump_ifzero(173)
// 0x00000170
0100  // DROP
09ef  // QY!
817d  // jump(17d)
0200  // DUP
021f  // (LIT)
0003
c042  // =
917b  // jump_ifzero(17b)
0100  // DROP
09ff  // QZ!
817d  // jump(17d)
0100  // DROP
09cf  // QT!
817f  // jump(17f)
098f  // !
5000  // NOP EXIT
// 0x00000180
// 180: dump
0240  // OVER
0742  // -
0200  // DUP
c04b  // 0<
9187  // jump_ifzero(187)
c037  // 2DROP
8199  // jump(199)
0311  // 1+
2100  // >R
8196  // jump(196)
0200  // DUP
c11e  // fetch
0240  // OVER
021f  // (LIT)
0007
0744  // AND
// 0x00000190
9193  // jump_ifzero(193)
c0bd  // SPACE
8194  // jump(194)
c0c4  // CR
c0ca  // X.
0311  // 1+
b18a  // jump_ifnz_dec(18a)
c0c4  // CR
0100  // DROP
5000  // NOP EXIT
// 19a: >inp
c09a  // FROMHEX
c0ec  // inp
030f  // @
0309  // 4ROL
021f  // (LIT)
fff0  // call_ifnz_dec(ff0)
// 0x000001a0
0744  // AND
0746  // OR
c0ec  // inp
598f  // ! EXIT
// 1a4: >here
c0f8  // here
030f  // @
c14d  // store
c0f8  // here
805a  // jump(05a)
// 1a9: prompt
c0db  // '>'
c0af  // EMIT
c00d  // BL
80af  // jump(0af)
// 1ad: del
c0e9  // cmd
030f  // @
0200  // DUP
// 0x000001b0
c00d  // BL
c04d  // >
91d0  // jump_ifzero(1d0)
0200  // DUP
c070  // ISHEX
91c7  // jump_ifzero(1c7)
c0ec  // inp
030f  // @
030d  // 4ASR
021f  // (LIT)
0fff
0744  // AND
0200  // DUP
91c1  // jump_ifzero(1c1)
0200  // DUP
c08e  // TOHEX
// 0x000001c0
81c2  // jump(1c2)
c00d  // BL
c0e9  // cmd
098f  // !
c0ec  // inp
098f  // !
81ca  // jump(1ca)
c00d  // BL
c0e9  // cmd
098f  // !
c005  // '\b'
c0af  // EMIT
c00d  // BL
c0af  // EMIT
c005  // '\b'
c0af  // EMIT
// 0x000001d0
5100  // DROP EXIT
// 1d1: eol
c0af  // EMIT
c0b2  // KEY
0200  // DUP
c00b  // '\r'
c042  // =
91d8  // jump_ifzero(1d8)
5000  // NOP EXIT
81d1  // jump(1d1)
// 1d9: MONITOR
c0b2  // KEY
0200  // DUP
c003  // ^C
c042  // =
91df  // jump_ifzero(1df)
5000  // NOP EXIT
0200  // DUP
// 0x000001e0
c005  // '\b'
c042  // =
91e5  // jump_ifzero(1e5)
0100  // DROP
c021  // DEL
0200  // DUP
c021  // DEL
0745  // XOR
d1ad  // call_ifzero(1ad)
0200  // DUP
c0d7  // '/'
0745  // XOR
d1d1  // call_ifzero(1d1)
0200  // DUP
c0b5  // ECHO
c0e9  // cmd
// 0x000001f0
030f  // @
0400  // SWAP
0200  // DUP
c00d  // BL
c052  // <=
924a  // jump_ifzero(24a)
c0f5  // copy
030f  // @
9207  // jump_ifzero(207)
0240  // OVER
c070  // ISHEX
91ff  // jump_ifzero(1ff)
c0ec  // inp
030f  // @
c1a4  // >here
0240  // OVER
// 0x00000200
c0e3  // ']'
c042  // =
9206  // jump_ifzero(206)
02c0  // 0
c0f5  // copy
098f  // !
8242  // jump(242)
0240  // OVER
c070  // ISHEX
920d  // jump_ifzero(20d)
c0ec  // inp
030f  // @
c0fb  // push
0240  // OVER
c0df  // '@'
c042  // =
// 0x00000210
9214  // jump_ifzero(214)
c101  // pop
c11e  // fetch
c0fb  // push
0240  // OVER
c0d5  // '.'
c042  // =
921b  // jump_ifzero(21b)
c101  // pop
c0ca  // X.
c0c4  // CR
0240  // OVER
c0d3  // '!'
c042  // =
9223  // jump_ifzero(223)
c101  // pop
// 0x00000220
c101  // pop
0400  // SWAP
c14d  // store
0240  // OVER
c0e5  // 'q'
c042  // =
922a  // jump_ifzero(22a)
c101  // pop
c107  // quad
c0fb  // push
0240  // OVER
c0dd  // '?'
c042  // =
9232  // jump_ifzero(232)
c101  // pop
c101  // pop
// 0x00000230
0400  // SWAP
c180  // dump
0240  // OVER
c0e1  // '['
c042  // =
923c  // jump_ifzero(23c)
c101  // pop
c0f8  // here
098f  // !
02f6  // TRUE
c0f5  // copy
098f  // !
0240  // OVER
c0e7  // 'r'
c042  // =
9242  // jump_ifzero(242)
// 0x00000240
c101  // pop
c025  // EXECUTE
02c0  // 0
c0ec  // inp
098f  // !
0200  // DUP
c00b  // '\r'
c042  // =
924a  // jump_ifzero(24a)
c1a9  // prompt
0200  // DUP
c070  // ISHEX
924f  // jump_ifzero(24f)
0200  // DUP
c19a  // >inp
0200  // DUP
// 0x00000250
c021  // DEL
c042  // =
9255  // jump_ifzero(255)
c037  // 2DROP
8258  // jump(258)
c031  // NIP
c0e9  // cmd
098f  // !
81d9  // jump(1d9)
// 259: ECHOLOOP
c0b2  // KEY
0200  // DUP
c0ca  // X.
c0c4  // CR
c003  // ^C
c042  // =
9261  // jump_ifzero(261)
// 0x00000260
5000  // NOP EXIT
8259  // jump(259)
// 262: BOOT
c259  // ECHOLOOP
c1a9  // prompt
81d9  // jump(1d9)
// 0x00000265
